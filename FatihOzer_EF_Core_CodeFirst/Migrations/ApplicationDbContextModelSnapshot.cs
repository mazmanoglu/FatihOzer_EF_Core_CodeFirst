// <auto-generated />
using System;
using FatihOzer_EF_Core_CodeFirst.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FatihOzer_EF_Core_CodeFirst.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FatihOzer_EF_Core_CodeFirst.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Name = "Kenan",
                            SurName = "Kurda"
                        },
                        new
                        {
                            AuthorId = 2,
                            Name = "Pearl",
                            SurName = "De Smet"
                        },
                        new
                        {
                            AuthorId = 3,
                            Name = "Ruud",
                            SurName = "Marks"
                        });
                });

            modelBuilder.Entity("FatihOzer_EF_Core_CodeFirst.Models.AuthorBook", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("AuthorBookId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("AuthorBooks");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            AuthorBookId = 1
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 2,
                            AuthorBookId = 2
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 3,
                            AuthorBookId = 3
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 1,
                            AuthorBookId = 4
                        });
                });

            modelBuilder.Entity("FatihOzer_EF_Core_CodeFirst.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Published")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("BookId");

                    b.HasIndex("StudentId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Published = new DateTime(1980, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 1,
                            Title = "basics of maths"
                        },
                        new
                        {
                            BookId = 2,
                            Published = new DateTime(2010, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 1,
                            Title = "csharp examples"
                        },
                        new
                        {
                            BookId = 3,
                            Published = new DateTime(2015, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 3,
                            Title = "dependency injection in dotnet"
                        });
                });

            modelBuilder.Entity("FatihOzer_EF_Core_CodeFirst.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            FirstName = "Fatih",
                            LastName = "Ozer"
                        },
                        new
                        {
                            StudentId = 2,
                            FirstName = "Anass",
                            LastName = "Allamzi"
                        },
                        new
                        {
                            StudentId = 3,
                            FirstName = "Olga",
                            LastName = "Kharchuk"
                        });
                });

            modelBuilder.Entity("FatihOzer_EF_Core_CodeFirst.Models.AuthorBook", b =>
                {
                    b.HasOne("FatihOzer_EF_Core_CodeFirst.Models.Author", "Author")
                        .WithMany("AuthorBooks")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FatihOzer_EF_Core_CodeFirst.Models.Book", "Book")
                        .WithMany("AuthorBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FatihOzer_EF_Core_CodeFirst.Models.Book", b =>
                {
                    b.HasOne("FatihOzer_EF_Core_CodeFirst.Models.Student", "Student")
                        .WithMany("Books")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
